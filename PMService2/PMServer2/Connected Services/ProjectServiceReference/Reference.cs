//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMServer2.ProjectServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectServiceReference.IProjectService")]
    public interface IProjectService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/IntializeDatabaseService", ReplyAction="http://tempuri.org/IProjectService/IntializeDatabaseServiceResponse")]
        void IntializeDatabaseService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/IntializeDatabaseService", ReplyAction="http://tempuri.org/IProjectService/IntializeDatabaseServiceResponse")]
        System.Threading.Tasks.Task IntializeDatabaseServiceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/FindDirectMessagesFor", ReplyAction="http://tempuri.org/IProjectService/FindDirectMessagesForResponse")]
        PMService2.Model.Message[] FindDirectMessagesFor(string loggedUser, PMService2.Model.Message lastMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/FindDirectMessagesFor", ReplyAction="http://tempuri.org/IProjectService/FindDirectMessagesForResponse")]
        System.Threading.Tasks.Task<PMService2.Model.Message[]> FindDirectMessagesForAsync(string loggedUser, PMService2.Model.Message lastMessage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/NewMessage", ReplyAction="http://tempuri.org/IProjectService/NewMessageResponse")]
        bool NewMessage(PMService2.Model.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/NewMessage", ReplyAction="http://tempuri.org/IProjectService/NewMessageResponse")]
        System.Threading.Tasks.Task<bool> NewMessageAsync(PMService2.Model.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectServiceChannel : PMServer2.ProjectServiceReference.IProjectService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectServiceClient : System.ServiceModel.ClientBase<PMServer2.ProjectServiceReference.IProjectService>, PMServer2.ProjectServiceReference.IProjectService {
        
        public ProjectServiceClient() {
        }
        
        public ProjectServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void IntializeDatabaseService() {
            base.Channel.IntializeDatabaseService();
        }
        
        public System.Threading.Tasks.Task IntializeDatabaseServiceAsync() {
            return base.Channel.IntializeDatabaseServiceAsync();
        }
        
        public PMService2.Model.Message[] FindDirectMessagesFor(string loggedUser, PMService2.Model.Message lastMessage) {
            return base.Channel.FindDirectMessagesFor(loggedUser, lastMessage);
        }
        
        public System.Threading.Tasks.Task<PMService2.Model.Message[]> FindDirectMessagesForAsync(string loggedUser, PMService2.Model.Message lastMessage) {
            return base.Channel.FindDirectMessagesForAsync(loggedUser, lastMessage);
        }
        
        public bool NewMessage(PMService2.Model.Message message) {
            return base.Channel.NewMessage(message);
        }
        
        public System.Threading.Tasks.Task<bool> NewMessageAsync(PMService2.Model.Message message) {
            return base.Channel.NewMessageAsync(message);
        }
    }
}
