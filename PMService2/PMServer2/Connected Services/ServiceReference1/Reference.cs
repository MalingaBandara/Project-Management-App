//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMServer2.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/PMService1.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataStore.Status", Namespace="http://schemas.datacontract.org/2004/07/PMService1.Model")]
    public enum DataStoreStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Busy = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invisible = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMainService")]
    public interface IMainService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/ValidateLogin", ReplyAction="http://tempuri.org/IMainService/ValidateLoginResponse")]
        bool ValidateLogin(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/ValidateLogin", ReplyAction="http://tempuri.org/IMainService/ValidateLoginResponse")]
        System.Threading.Tasks.Task<bool> ValidateLoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SetUserStatus", ReplyAction="http://tempuri.org/IMainService/SetUserStatusResponse")]
        bool SetUserStatus(PMServer2.ServiceReference1.User user, PMServer2.ServiceReference1.DataStoreStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SetUserStatus", ReplyAction="http://tempuri.org/IMainService/SetUserStatusResponse")]
        System.Threading.Tasks.Task<bool> SetUserStatusAsync(PMServer2.ServiceReference1.User user, PMServer2.ServiceReference1.DataStoreStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserStatus", ReplyAction="http://tempuri.org/IMainService/GetUserStatusResponse")]
        System.Nullable<PMServer2.ServiceReference1.DataStoreStatus> GetUserStatus(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetUserStatus", ReplyAction="http://tempuri.org/IMainService/GetUserStatusResponse")]
        System.Threading.Tasks.Task<System.Nullable<PMServer2.ServiceReference1.DataStoreStatus>> GetUserStatusAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/RegisterUser", ReplyAction="http://tempuri.org/IMainService/RegisterUserResponse")]
        bool RegisterUser(string email, string name, string password, byte[] image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/RegisterUser", ReplyAction="http://tempuri.org/IMainService/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(string email, string name, string password, byte[] image);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainServiceChannel : PMServer2.ServiceReference1.IMainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<PMServer2.ServiceReference1.IMainService>, PMServer2.ServiceReference1.IMainService {
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ValidateLogin(string email, string password) {
            return base.Channel.ValidateLogin(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateLoginAsync(string email, string password) {
            return base.Channel.ValidateLoginAsync(email, password);
        }
        
        public bool SetUserStatus(PMServer2.ServiceReference1.User user, PMServer2.ServiceReference1.DataStoreStatus status) {
            return base.Channel.SetUserStatus(user, status);
        }
        
        public System.Threading.Tasks.Task<bool> SetUserStatusAsync(PMServer2.ServiceReference1.User user, PMServer2.ServiceReference1.DataStoreStatus status) {
            return base.Channel.SetUserStatusAsync(user, status);
        }
        
        public System.Nullable<PMServer2.ServiceReference1.DataStoreStatus> GetUserStatus(string email) {
            return base.Channel.GetUserStatus(email);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<PMServer2.ServiceReference1.DataStoreStatus>> GetUserStatusAsync(string email) {
            return base.Channel.GetUserStatusAsync(email);
        }
        
        public bool RegisterUser(string email, string name, string password, byte[] image) {
            return base.Channel.RegisterUser(email, name, password, image);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(string email, string name, string password, byte[] image) {
            return base.Channel.RegisterUserAsync(email, name, password, image);
        }
    }
}
